#!/usr/bin/env python3

import argparse
import os
import sys
from subprocess import run

DIRS = {
    "alacritty": "share/alacritty",
    "nvim": "share/nvim/site/pack/plugins/start",
    "tmux": "share/tmux",
    "zsh": "share/zsh/plugins",
    "other": "share/other",
}


def get_dirs_help():
    dirs = ", ".join(DIRS.keys())
    return f"Possible arguments: {dirs}"


def get_folder_path(args):
    out = args.REPO.split("/")
    folder = DIRS.get(args.folder, "")
    path = os.path.join(folder, out[-1])
    return path


def get_from_repo(args):
    if args.repository.endswith(".git") or args.repository.startswith(
            "https://github.com/"):
        sys.exit(sys.stderr.write("Not a proper repository name!\n"))
    return args.repository


def main(args):
    path = get_folder_path(args)
    link = "https://github.com/" + args.REPO + ".git"
    abs_local = os.path.expanduser(f"~/dotfiles/{args.folder}/.local")
    abs_path = os.path.join(abs_local, path)
    opt = "--force" if args.force else ""
    run(f"git submodule add {opt}{link} {path}", shell=True,
        cwd=abs_local)
    run("git submodule init", shell=True, cwd=abs_path)
    run("git submodule update --init --recursive", shell=True, cwd=abs_path)


def parse_argv():
    parser = argparse.ArgumentParser()
    parser.add_argument("--folder", "-f", help=get_dirs_help(), required=True)
    parser.add_argument("--force", help="Force adding submodule")
    parser.add_argument(
        "REPO", help="Repository name in the 'author/repository' format")
    args = parser.parse_args()
    return args


if __name__ == "__main__":
    main(parse_argv())
